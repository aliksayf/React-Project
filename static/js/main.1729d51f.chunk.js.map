{"version":3,"sources":["logo.svg","MenuItem.js","Menu.js","Logo.js","Header.js","Footer.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuItem","href","className","Menu","Logo","src","logo","Header","Footer","Content","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,kC,gLCa5BC,MAVf,WACE,OACI,uBAAGC,KAAK,IACN,wBAAIC,UAAU,WAAd,eCWOC,MAbf,WACI,OACI,6BACI,4BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCCDC,MATf,WACI,OACI,yBAAKF,UAAU,QACX,yBAAKG,IAAKC,QCaPC,MAdf,WACI,OACI,gCAEI,yBAAKL,UAAU,kBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,YAAf,mBACA,kBAAC,EAAD,SCGDM,MAXf,WACI,OACI,gCACI,yBAAKN,UAAU,kBACX,kBAAC,EAAD,SCwBDO,MA7Bf,WACI,OACI,8BACI,uCACA,iCACI,otBASA,osBCADC,MAVf,WACE,OACE,yBAAKR,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAcS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1729d51f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\n\nfunction MenuItem() {\n  return (\n      <a href=\"\">\n        <li className='navItem'>\n            Menu Item\n        </li>\n      </a>\n  );\n}\n\nexport default MenuItem;\n","import React from 'react';\nimport logo from './logo.svg';\nimport MenuItem from \"./MenuItem\";\n\nfunction Menu() {\n    return (\n        <nav>\n            <ol>\n                <MenuItem/>\n                <MenuItem/>\n                <MenuItem/>\n                <MenuItem/>\n            </ol>\n        </nav>\n    );\n}\n\nexport default Menu;\n","import React from 'react';\nimport logo from './logo.svg'\n\nfunction Logo() {\n    return (\n        <div className=\"logo\">\n            <img src={logo} />\n\n        </div>\n    );\n}\n\nexport default Logo;\n","import React from 'react';\nimport logo from './logo.svg';\nimport Menu from \"./Menu\";\nimport Logo from \"./Logo\";\n\nfunction Header() {\n    return (\n        <header>\n\n            <div className='header-content'>\n                <Logo/>\n                <div className='logoName'>React JS course</div>\n                <Menu/>\n            </div>\n\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport logo from './logo.svg';\nimport Logo from \"./Logo\";\n\nfunction Footer() {\n    return (\n        <footer>\n            <div className='header-content'>\n                <Logo/>\n\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport logo from './logo.svg';\n\nfunction Content() {\n    return (\n        <main>\n            <h2>Content</h2>\n            <article>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n                    labore et dolore magna aliqua. Cras tincidunt lobortis feugiat vivamus at augue eget arcu dictum.\n                    Id velit ut tortor pretium. Faucibus a pellentesque sit amet porttitor eget. Facilisis leo vel\n                    fringilla est ullamcorper eget nulla facilisi. Risus at ultrices mi tempus imperdiet nulla malesuada\n                    pellentesque elit. Lobortis scelerisque fermentum dui faucibus in. Id consectetur purus ut faucibus.\n                    Diam vulputate ut pharetra sit. Iaculis eu non diam phasellus. Augue neque gravida in fermentum et\n                    sollicitudin ac orci phasellus. Sed arcu non odio euismod lacinia. Odio euismod lacinia at quis risus sed.\n                </p>\n                <p>\n                    Enim lobortis scelerisque fermentum dui faucibus in ornare quam viverra. Turpis in eu mi bibendum\n                    neque egestas congue quisque egestas. A lacus vestibulum sed arcu non odio euismod lacinia.\n                    Diam vel quam elementum pulvinar. Arcu ac tortor dignissim convallis aenean et tortor at risus.\n                    Amet tellus cras adipiscing enim eu turpis egestas pretium aenean. Mattis pellentesque id nibh\n                    tortor id. Quam id leo in vitae turpis massa. Nibh mauris cursus mattis molestie. Auctor urna nunc\n                    id cursus metus. Morbi non arcu risus quis varius quam quisque id diam. Quis risus sed vulputate\n                    odio ut. Urna porttitor rhoncus dolor purus non enim. Id leo in vitae turpis massa sed elementum.\n                </p>\n\n            </article>\n        </main>\n    );\n}\n\nexport default Content;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Content from \"./Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Content/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}